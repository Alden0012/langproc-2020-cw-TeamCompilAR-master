#include "AST/ast_node.hpp"
#include "AST/ast_root.hpp"
#include "AST/ast_declaration.hpp"
#include "AST/Scope/ast_scope.hpp"
#include "AST/Scope/ast_globalscope.hpp"
#include "AST/Functions/ast_functiondef.hpp"
#include "AST/Statements/ast_statement.hpp"
#include "AST/Expressions/ast_expression.hpp"
#include "AST/Expressions/ast_variable.hpp"
#include "AST/Expressions/ast_arrayIndex.hpp"
#include "AST/Expressions/Constants/ast_intConst.hpp"
#include "AST/Expressions/Constants/ast_floatConst.hpp"
#include "AST/Expressions/Constants/ast_charConst.hpp"
#include "AST/Expressions/Constants/ast_stringConst.hpp"
#include "AST/Expressions/Unary/ast_incOp.hpp"
#include "AST/Expressions/Unary/ast_decOp.hpp"
#include "AST/Expressions/Unary/ast_UnaryOp.hpp"
#include "AST/Expressions/Unary/ast_SizeOf.hpp"
#include "AST/Expressions/Binary/ast_MultiplicativeOp.hpp"
#include "AST/Expressions/Binary/ast_AdditiveOp.hpp"
#include "AST/Expressions/Binary/ast_ShiftOp.hpp"
#include "AST/Expressions/Binary/ast_RelationalOp.hpp"
#include "AST/Expressions/Binary/ast_BitwiseOp.hpp"
#include "AST/Expressions/Binary/ast_LogicalOp.hpp"
#include "AST/Expressions/ast_TernaryOp.hpp"
#include "AST/Expressions/ast_AssignmentExpr.hpp"
#include "AST/Statements/ast_ExprStatement.hpp"
#include "AST/Statements/ast_ReturnStatement.hpp"
#include "AST/Statements/ast_IfElseStatement.hpp"
#include "AST/Statements/ast_WhileStatement.hpp"
#include "AST/Statements/ast_CompoundStatement.hpp"
#include "AST/Statements/ast_ForStatement.hpp"
#include "AST/Statements/ast_FunctionCall.hpp"
#include "AST/Statements/ast_BreakStatement.hpp"
#include "AST/Statements/ast_ContinueStatement.hpp"
#include "AST/Statements/ast_SwitchStatement.hpp"
#include "AST/Statements/ast_CaseStatement.hpp"
#include "AST/ast_PostProc.hpp"
extern Root *parseAST();